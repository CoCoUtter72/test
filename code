<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Job Application Bot</title>
    <style>
        #drop-area {
            border: 2px dashed #ccc;
            border-radius: 20px;
            width: 100%;
            padding: 20px;
            text-align: center;
            margin-top: 20px;
        }
        #drop-area.highlight {
            border-color: purple;
        }
        .my-form {
            margin-bottom: 10px;
        }
    </style>
</head>
<body>
    <h1>Job Application Bot</h1>
    <form id="jobForm" class="my-form">
        <label for="title">Job Title:</label>
        <input type="text" id="title" name="title" value="Evening"><br><br>
        <label for="location">Location:</label>
        <input type="text" id="location" name="location" value="St Kilda East"><br><br>
        <label for="radius">Radius (km):</label>
        <input type="number" id="radius" name="radius" value="10"><br><br>
        <label for="email">Email:</label>
        <input type="email" id="email" name="email"><br><br>
        <label for="name">Name:</label>
        <input type="text" id="name" name="name"><br><br>
        <div id="drop-area">
            <p>Drag & Drop your resume here</p>
            <input type="file" id="fileElem" accept=".pdf" style="display:none">
            <button type="button" onclick="document.getElementById('fileElem').click()">Select File</button>
        </div>
        <button type="button" onclick="startApplication()">Start Application</button>
    </form>
    <script src="script.js"></script>
</body>
</html>






document.getElementById('drop-area').addEventListener('dragover', (event) => {
    event.preventDefault();
    event.stopPropagation();
    event.target.classList.add('highlight');
});

document.getElementById('drop-area').addEventListener('dragleave', (event) => {
    event.preventDefault();
    event.stopPropagation();
    event.target.classList.remove('highlight');
});

document.getElementById('drop-area').addEventListener('drop', (event) => {
    event.preventDefault();
    event.stopPropagation();
    event.target.classList.remove('highlight');
    const files = event.dataTransfer.files;
    handleFiles(files);
});

document.getElementById('fileElem').addEventListener('change', (event) => {
    const files = event.target.files;
    handleFiles(files);
});

let resumeFile;

function handleFiles(files) {
    resumeFile = files[0];
    const dropArea = document.getElementById('drop-area');
    dropArea.innerHTML = `<p>${resumeFile.name}</p>`;
}

async function startApplication() {
    const title = document.getElementById('title').value;
    const location = document.getElementById('location').value;
    const radius = document.getElementById('radius').value;
    const email = document.getElementById('email').value;
    const name = document.getElementById('name').value;

    const jobs = await scrapeJobs(title, location, radius);
    for (const job of jobs) {
        await applyToJob(job, name, email, resumeFile);
    }
}

async function scrapeJobs(titleFilter, locationFilter, radiusFilter) {
    const url = `https://au.jora.com/j?l=${encodeURIComponent(locationFilter)}&q=${encodeURIComponent(titleFilter)}&radius=${radiusFilter}`;
    const response = await fetch(url);
    const text = await response.text();
    const parser = new DOMParser();
    const doc = parser.parseFromString(text, 'text/html');
    const jobs = [];

    doc.querySelectorAll('.job').forEach(jobElement => {
        const title = jobElement.querySelector('.job-title').textContent;
        const location = jobElement.querySelector('.job-location').textContent;
        if (title.includes(titleFilter) && location.includes(locationFilter)) {
            const link = jobElement.querySelector('a').href;
            jobs.push({ title, location, link });
        }
    });

    return jobs;
}

async function applyToJob(job, name, email, resumeFile) {
    const formData = new FormData();
    formData.append('name', name);
    formData.append('email', email);
    formData.append('resume', resumeFile);

    const response = await fetch(job.link, {
        method: 'POST',
        body: formData
    });

    if (response.ok) {
        console.log(`Applied to job: ${job.title}`);
    } else {
        console.error(`Failed to apply to job: ${job.title}`);
    }
}
